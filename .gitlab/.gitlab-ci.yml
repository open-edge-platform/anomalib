workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  #  - build
  #  - docs
  - coverage

#build_image:
#  stage: build
#  tags:
#    - build-image
#  script:
#    - git clone ssh://git@gitlab.devtools.intel.com:29418/vmc-eip/IMPT/impt.git
#    - export http_proxy=http://proxy-dmz.intel.com:912
#    - export https_proxy=http://proxy-dmz.intel.com:912
#    - docker build -t registry-icv.inn.intel.com/anomalib_dev/anomalib_development_env .
#  only:
#    refs:
#      - merge_requests
#    changes:
#      - Dockerfile
#      - requirements/requirements.txt
#      - requirements/requirements_dev.txt
#      - requirements/requirements_openvino_mo.txt
#  except:
#    - /^feature/

#pages:
#  image: registry-icv.inn.intel.com/anomalib_dev/anomalib_development_env
#  stage: docs
#  tags:
#    - docker
#  script:
#    - mkdir public
#    - cd docs
#    - pip install -r requirements.txt
#    - sphinx-build -b html source build
#    - cp -r ./build ../public
#  artifacts:
#    paths:
#      - public

coverage:
  image: registry-icv.inn.intel.com/anomalib_dev/anomalib_development_env
  stage: coverage
  tags:
    - docker
  before_script:
    - mkdir -p $HOME/.docker/
    - 'echo "{ \"proxies\": { \"default\": { \"httpProxy\": \"http://proxy-dmz.intel.com:912\", \"httpsProxy\": \"http://proxy-dmz.intel.com:912\",, \"ftpProxy\": \"http://proxy-dmz.intel.com:912\", \"noProxy\": \"$NO_PROXY\" } } }" > $HOME/.docker/config.json'
    - 'echo "{ \"proxies\": { \"default\": { \"httpProxy\": \"http://proxy-dmz.intel.com:912\", \"httpsProxy\": \"http://proxy-dmz.intel.com:912\", , \"ftpProxy\": \"http://proxy-dmz.intel.com:912\", \"noProxy\": \"$NO_PROXY\" } } }" '
  script:
    - echo $PATH
    - black --check --diff anomalib apis -l 120
    - isort --check-only --df anomalib apis --profile=black
    - flake8 anomalib apis
    - pylint anomalib apis --rcfile=tox.ini
    - python -m mypy --install-types --non-interactive anomalib --config-file tox.ini
    - python -m mypy --install-types --non-interactive tools/train.py --config-file tox.ini
    - python -m mypy --install-types --non-interactive tools/test.py --config-file tox.ini
    - python -m mypy --install-types --non-interactive tools/test.py --config-file tox.ini
    - coverage run --include=anomalib/*,apis/* -m pytest -ra
    - coverage report -m --fail-under=90
    - coverage xml -o coverage.xml
  timeout: 3h
  artifacts:
    reports:
      cobertura: coverage.xml
