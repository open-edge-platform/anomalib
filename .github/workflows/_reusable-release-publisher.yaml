# Release Publisher Workflow
#
# This reusable workflow handles package publication to PyPI and GitHub,
# supporting both production and pre-release deployments.
#
# Key Features:
# - PyPI package publishing
# - GitHub release creation
# - Pre-release support
# - Release notes generation
# - Artifact management
#
# Process Stages:
# 1. Artifact Processing:
#    - Download validation
#    - Package verification
#    - Distribution preparation
#
# 2. PyPI Publication:
#    - Environment selection
#    - Package upload
#    - Publication verification
#
# 3. GitHub Release:
#    - Release creation
#    - Asset attachment
#    - Notes generation
#
# Required Inputs:
# - version: Version to release
# - artifact-name: Name of artifact to publish
# - is-prerelease: Whether this is a pre-release
#
# Note: PyPI publishing uses OIDC (OpenID Connect) authentication.
# Configure trusted publisher in PyPI project settings:
# - Owner: <your-org>
# - Repository name: anomalib
# - Workflow name: release.yaml
# - Environment name: production
#
# Note: This workflow is used for production and beta releases only.
# RC releases are published directly from _reusable-rc-release-process.yaml
# using the 'technical-review' environment.
#
# Example Usage:
# 1. Production Release:
#    jobs:
#      publish:
#        uses: ./.github/workflows/_reusable-release-publisher.yaml
#        with:
#          version: "v1.0.0"
#          artifact-name: "dist-123456789"
#          is-prerelease: false
#        secrets:
#          pypi-token: ${{ secrets.PYPI_TOKEN }}
#
# Note: Requires appropriate tokens and permissions for publishing

name: Reusable Release Publisher

on:
  workflow_call:
    inputs:
      version:
        description: "Version to release"
        required: true
        type: string
      artifact-name:
        description: "Name of the artifact to publish"
        required: true
        type: string
      is-prerelease:
        description: "Whether this is a pre-release"
        type: boolean
        default: false

permissions:
  id-token: write # Required for OIDC authentication with PyPI

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: ${{ inputs.is-prerelease && 'staging' || 'production' }}
    permissions:
      contents: write # is required by action-gh-release
      id-token: write # Required for OIDC authentication with PyPI
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: ${{ inputs.artifact-name }}
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
      - uses: softprops/action-gh-release@62c96d0c4e8a889135c1f3a25910db8dbe0e85f7 # v2.3.4
        with:
          tag_name: ${{ inputs.version }}
          name: Release ${{ inputs.version }}
          draft: false
          prerelease: ${{ inputs.is-prerelease }}
          files: dist/*
          generate_release_notes: true
